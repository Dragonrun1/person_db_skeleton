<?php

namespace PersonDBSkeleton\Model\Proxies\__CG__\PersonDBSkeleton\Model\Entities;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class People extends \PersonDBSkeleton\Model\Entities\People implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'PersonDBSkeleton\\Model\\Entities\\People' . "\0" . 'additionalName', '' . "\0" . 'PersonDBSkeleton\\Model\\Entities\\People' . "\0" . 'addresses', '' . "\0" . 'PersonDBSkeleton\\Model\\Entities\\People' . "\0" . 'birthday', '' . "\0" . 'PersonDBSkeleton\\Model\\Entities\\People' . "\0" . 'emails', '' . "\0" . 'PersonDBSkeleton\\Model\\Entities\\People' . "\0" . 'familyName', '' . "\0" . 'PersonDBSkeleton\\Model\\Entities\\People' . "\0" . 'gender', '' . "\0" . 'PersonDBSkeleton\\Model\\Entities\\People' . "\0" . 'givenName', '' . "\0" . 'PersonDBSkeleton\\Model\\Entities\\People' . "\0" . 'honorificPrefix', '' . "\0" . 'PersonDBSkeleton\\Model\\Entities\\People' . "\0" . 'honorificSuffix', '' . "\0" . 'PersonDBSkeleton\\Model\\Entities\\People' . "\0" . 'phoneNumbers', '' . "\0" . 'PersonDBSkeleton\\Model\\Entities\\People' . "\0" . 'photo', '' . "\0" . 'PersonDBSkeleton\\Model\\Entities\\People' . "\0" . 'pronouns', 'createdAt', 'id'];
        }

        return ['__isInitialized__', '' . "\0" . 'PersonDBSkeleton\\Model\\Entities\\People' . "\0" . 'additionalName', '' . "\0" . 'PersonDBSkeleton\\Model\\Entities\\People' . "\0" . 'addresses', '' . "\0" . 'PersonDBSkeleton\\Model\\Entities\\People' . "\0" . 'birthday', '' . "\0" . 'PersonDBSkeleton\\Model\\Entities\\People' . "\0" . 'emails', '' . "\0" . 'PersonDBSkeleton\\Model\\Entities\\People' . "\0" . 'familyName', '' . "\0" . 'PersonDBSkeleton\\Model\\Entities\\People' . "\0" . 'gender', '' . "\0" . 'PersonDBSkeleton\\Model\\Entities\\People' . "\0" . 'givenName', '' . "\0" . 'PersonDBSkeleton\\Model\\Entities\\People' . "\0" . 'honorificPrefix', '' . "\0" . 'PersonDBSkeleton\\Model\\Entities\\People' . "\0" . 'honorificSuffix', '' . "\0" . 'PersonDBSkeleton\\Model\\Entities\\People' . "\0" . 'phoneNumbers', '' . "\0" . 'PersonDBSkeleton\\Model\\Entities\\People' . "\0" . 'photo', '' . "\0" . 'PersonDBSkeleton\\Model\\Entities\\People' . "\0" . 'pronouns', 'createdAt', 'id'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (People $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function addAddress(\PersonDBSkeleton\Model\Entities\PeopleAddresses $address): \PersonDBSkeleton\Model\Entities\People
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAddress', [$address]);

        return parent::addAddress($address);
    }

    /**
     * {@inheritDoc}
     */
    public function addEmail(\PersonDBSkeleton\Model\Entities\PeopleEmails $email): \PersonDBSkeleton\Model\Entities\People
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addEmail', [$email]);

        return parent::addEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function addPhoneNumber(\PersonDBSkeleton\Model\Entities\PeoplePhoneNumbers $phoneNumber): \PersonDBSkeleton\Model\Entities\People
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPhoneNumber', [$phoneNumber]);

        return parent::addPhoneNumber($phoneNumber);
    }

    /**
     * {@inheritDoc}
     */
    public function deleteAddress(\PersonDBSkeleton\Model\Entities\PeopleAddresses $address): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'deleteAddress', [$address]);

        return parent::deleteAddress($address);
    }

    /**
     * {@inheritDoc}
     */
    public function deleteEmail(\PersonDBSkeleton\Model\Entities\PeopleEmails $email): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'deleteEmail', [$email]);

        return parent::deleteEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function deletePhoneNumber(\PersonDBSkeleton\Model\Entities\PeoplePhoneNumbers $phoneNumber): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'deletePhoneNumber', [$phoneNumber]);

        return parent::deletePhoneNumber($phoneNumber);
    }

    /**
     * {@inheritDoc}
     */
    public function getAdditionalName(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAdditionalName', []);

        return parent::getAdditionalName();
    }

    /**
     * {@inheritDoc}
     */
    public function getAddresses(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAddresses', []);

        return parent::getAddresses();
    }

    /**
     * {@inheritDoc}
     */
    public function getBirthday(): ?\DateTimeImmutable
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBirthday', []);

        return parent::getBirthday();
    }

    /**
     * {@inheritDoc}
     */
    public function getEmails(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmails', []);

        return parent::getEmails();
    }

    /**
     * {@inheritDoc}
     */
    public function getFamilyName(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFamilyName', []);

        return parent::getFamilyName();
    }

    /**
     * {@inheritDoc}
     */
    public function getGender(): ?\PersonDBSkeleton\Model\Entities\Genders
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGender', []);

        return parent::getGender();
    }

    /**
     * {@inheritDoc}
     */
    public function getGivenName(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGivenName', []);

        return parent::getGivenName();
    }

    /**
     * {@inheritDoc}
     */
    public function getHonorificPrefix(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHonorificPrefix', []);

        return parent::getHonorificPrefix();
    }

    /**
     * {@inheritDoc}
     */
    public function getHonorificSuffix(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHonorificSuffix', []);

        return parent::getHonorificSuffix();
    }

    /**
     * {@inheritDoc}
     */
    public function getPhoneNumbers(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPhoneNumbers', []);

        return parent::getPhoneNumbers();
    }

    /**
     * {@inheritDoc}
     */
    public function getPhoto(): ?\PersonDBSkeleton\Model\Entities\PeoplePhotos
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPhoto', []);

        return parent::getPhoto();
    }

    /**
     * {@inheritDoc}
     */
    public function getPronouns(): ?\PersonDBSkeleton\Model\Entities\Pronouns
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPronouns', []);

        return parent::getPronouns();
    }

    /**
     * {@inheritDoc}
     */
    public function setAdditionalName(string $value = NULL): \PersonDBSkeleton\Model\Entities\People
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAdditionalName', [$value]);

        return parent::setAdditionalName($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setBirthday(\DateTimeImmutable $value = NULL): \PersonDBSkeleton\Model\Entities\People
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBirthday', [$value]);

        return parent::setBirthday($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setFamilyName(string $value): \PersonDBSkeleton\Model\Entities\People
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFamilyName', [$value]);

        return parent::setFamilyName($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setGender(\PersonDBSkeleton\Model\Entities\Genders $value = NULL): \PersonDBSkeleton\Model\Entities\People
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGender', [$value]);

        return parent::setGender($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setGivenName(string $value): \PersonDBSkeleton\Model\Entities\People
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGivenName', [$value]);

        return parent::setGivenName($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setHonorificPrefix(string $value = NULL): \PersonDBSkeleton\Model\Entities\People
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHonorificPrefix', [$value]);

        return parent::setHonorificPrefix($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setHonorificSuffix(string $value = NULL): \PersonDBSkeleton\Model\Entities\People
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHonorificSuffix', [$value]);

        return parent::setHonorificSuffix($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setPhoto(\PersonDBSkeleton\Model\Entities\PeoplePhotos $value = NULL): \PersonDBSkeleton\Model\Entities\People
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPhoto', [$value]);

        return parent::setPhoto($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setPronouns(\PersonDBSkeleton\Model\Entities\Pronouns $value = NULL): \PersonDBSkeleton\Model\Entities\People
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPronouns', [$value]);

        return parent::setPronouns($value);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt(): \DateTimeImmutable
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function jsonSerialize(): array
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'jsonSerialize', []);

        return parent::jsonSerialize();
    }

    /**
     * {@inheritDoc}
     */
    public function getId(): string
    {
        if ($this->__isInitialized__ === false) {
            return  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

}
